# ---------------------------------------------------------
# Streamlit 통합 MCP ReAct Agent 챗봇 (060 UI 스타일)
#  - Chinook DB MCP 서버 + Notion MCP 서버 통합
#  - 제출 시마다 MCP 서버 연결 후 에이전트 단회 호출
# ---------------------------------------------------------


















# ---------------------------------------------------------
# LLM 초기화 (LangChain 표준 init_chat_model)
# ---------------------------------------------------------


# ---------------------------------------------------------
# Streamlit 페이지 및 헤더
# ---------------------------------------------------------



# ---------------------------------------------------------
# 사이드바 버튼
# ---------------------------------------------------------




# ---------------------------------------------------------
# Session State 초기화
# ---------------------------------------------------------



# ---------------------------------------------------------
# 환경 변수 점검 (Notion 관련)
# ---------------------------------------------------------








# ---------------------------------------------------------
# MCP Agent 실행 (제출 시 일회 호출)
#   - MultiServerMCPClient로 두 MCP 서버(chinook/notion) 연결
#   - 모든 도구를 수집(get_tools) 후 에이전트 단회 실행
# ---------------------------------------------------------
async def run_agent_with_mcp(messages: list[object]) -> str:
    """
    주어진 메시지 히스토리(messages)를 입력으로 받아
    MCP 서버(Chinook DB + Notion)와 통합된 ReAct Agent를 실행하여
    최종 AI 응답 텍스트(content)를 반환합니다.
    """

    # ───────────────────────────────────────────────
    # ① 서버 스크립트 경로 설정
    #   현재 파일 경로 기준으로 Chinook MCP 서버 위치 계산
    # ───────────────────────────────────────────────






    # ───────────────────────────────────────────────
    # ② MultiServerMCPClient 선언 (두 MCP 서버 통합)
    #   • Chinook: stdio (로컬 파이썬 서브프로세스)
    #   • Notion : stdio (npx로 공식 MCP 서버 실행)
    # ───────────────────────────────────────────────










    # ───────────────────────────────────────────────
    # ③ 사용자 입력 메시지에 "기본 Notion 페이지 ID" 안내문 추가
    # ───────────────────────────────────────────────


    # ───────────────────────────────────────────────
    # ④ 모든 서버에서 MCP 도구 수집 → 에이전트 생성 → 단회 실행
    # ──────────────────────────────────────────────────




# ---------------------------------------------------------
# 사이드바 버튼 동작
# ---------------------------------------------------------







# ---------------------------------------------------------
# 메인 입력 폼 및 Agent 호출
# ---------------------------------------------------------



# ---------------------------------------------------------
# 마지막 AIMessage를 입력 폼 바로 아래에 표시
# ---------------------------------------------------------





# ---------------------------------------------------------
# 이전 대화 이력 표시 (060 스타일)
# ---------------------------------------------------------








